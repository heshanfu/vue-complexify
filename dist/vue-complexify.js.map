{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///vue-complexify.js","webpack:///webpack/bootstrap b52772e708adb88be9fa","webpack:///./src/VueComplexify.js","webpack:///./node_modules/node-complexify/lib/complexify.js","webpack:///./node_modules/underscore/underscore.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","value","VueComplexify","install","Vue","complexify","$evalPasswordComplexity","password","callback","evalPasswordComplexity","default","_","DEFAULT_BAN_LIST","split","CHARSETS","defaultBanList","options","defaults","minimumChars","minimumComplexity","strengthScaleFactor","bannedPasswords","banMode","pick","keys","complexity","error","str","length","indexOf","console","log","push","charset","charCodeAt","Math","pow","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","createReduce","dir","iterator","obj","iteratee","memo","index","currentKey","context","optimizeCb","isArrayLike","arguments","createPredicateIndexFinder","array","predicate","cb","getLength","createIndexFinder","predicateFind","sortedIndex","item","idx","max","min","slice","isNaN","collectNonEnumProps","nonEnumIdx","nonEnumerableProps","constructor","proto","isFunction","ObjProto","prop","has","contains","previousUnderscore","ArrayProto","Array","FuncProto","Function","toString","nativeIsArray","isArray","nativeKeys","nativeBind","bind","nativeCreate","create","Ctor","_wrapped","VERSION","func","argCount","other","collection","accumulator","apply","identity","isObject","matcher","Infinity","createAssigner","keysFunc","undefinedOnly","source","key","baseCreate","result","MAX_ARRAY_INDEX","each","forEach","map","collect","results","reduce","foldl","inject","reduceRight","foldr","find","detect","findIndex","findKey","filter","select","list","reject","negate","every","all","some","any","includes","include","fromIndex","guard","values","invoke","method","args","isFunc","pluck","where","attrs","findWhere","computed","lastComputed","shuffle","rand","set","shuffled","random","sample","sortBy","criteria","sort","left","right","a","b","group","behavior","groupBy","indexBy","countBy","toArray","size","partition","pass","fail","first","head","take","initial","last","rest","tail","drop","compact","flatten","input","shallow","strict","startIndex","output","isArguments","j","len","without","difference","uniq","unique","isSorted","isBoolean","seen","union","intersection","argsLength","zip","unzip","findLastIndex","low","high","mid","floor","lastIndexOf","range","start","stop","step","ceil","executeBound","sourceFunc","boundFunc","callingContext","self","TypeError","bound","concat","partial","boundArgs","position","bindAll","Error","memoize","hasher","cache","address","delay","wait","setTimeout","defer","throttle","timeout","previous","later","leading","now","remaining","clearTimeout","trailing","debounce","immediate","timestamp","callNow","wrap","wrapper","compose","after","times","before","once","hasEnumBug","propertyIsEnumerable","allKeys","mapObject","pairs","invert","functions","methods","names","extend","extendOwn","assign","oiteratee","omit","String","props","clone","tap","interceptor","isMatch","eq","aStack","bStack","className","areArrays","aCtor","bCtor","pop","isEqual","isEmpty","isString","isElement","nodeType","type","Int8Array","isFinite","parseFloat","isNumber","isNull","isUndefined","noConflict","constant","noop","propertyOf","matches","accum","Date","getTime","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","match","join","testRegexp","RegExp","replaceRegexp","string","test","replace","escape","unescape","fallback","idCounter","uniqueId","prefix","id","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","template","text","settings","oldSettings","offset","variable","render","e","data","chain","instance","_chain","mixin","valueOf","toJSON","undefined"],"mappings":"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","file":"vue-complexify.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"VueComplexify\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VueComplexify\"] = factory();\n\telse\n\t\troot[\"VueComplexify\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"VueComplexify\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VueComplexify\"] = factory();\n\telse\n\t\troot[\"VueComplexify\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar VueComplexify = {\n  install: function install(Vue) {\n    /* eslint-disable no-undef */\n    var complexify = __webpack_require__(1);\n\n    Vue.prototype.$evalPasswordComplexity = function (password, callback) {\n      complexify.evalPasswordComplexity(password, callback);\n    };\n  }\n};\n\nexports.default = VueComplexify;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// @module complexify\n\nvar _ = __webpack_require__(2);\n\n// @callback evalPasswordComplexityCallback\n// @param {string} err - error code if an error occurs, null otherwise\n// @param {boolean} valid - straight boolean to determine whether the password is valid or not given the supplied complexity params\n// @param {number} complexity - complexity score for the password scaled according to strengthScaleFactor (0-100% is default)\n\nvar DEFAULT_BAN_LIST = '123456|password|12345678|1234|pussy|12345|dragon|qwerty|696969|mustang|letmein|baseball|master|michael|football|shadow|monkey|abc123|pass|fuckme|6969|jordan|harley|ranger|iwantu|jennifer|hunter|fuck|2000|test|batman|trustno1|thomas|tigger|robert|access|love|buster|1234567|soccer|hockey|killer|george|sexy|andrew|charlie|superman|asshole|fuckyou|dallas|jessica|panties|pepper|1111|austin|william|daniel|golfer|summer|heather|hammer|yankees|joshua|maggie|biteme|enter|ashley|thunder|cowboy|silver|richard|fucker|orange|merlin|michelle|corvette|bigdog|cheese|matthew|121212|patrick|martin|freedom|ginger|blowjob|nicole|sparky|yellow|camaro|secret|dick|falcon|taylor|111111|131313|123123|bitch|hello|scooter|please|porsche|guitar|chelsea|black|diamond|nascar|jackson|cameron|654321|computer|amanda|wizard|xxxxxxxx|money|phoenix|mickey|bailey|knight|iceman|tigers|purple|andrea|horny|dakota|aaaaaa|player|sunshine|morgan|starwars|boomer|cowboys|edward|charles|girls|booboo|coffee|xxxxxx|bulldog|ncc1701|rabbit|peanut|john|johnny|gandalf|spanky|winter|brandy|compaq|carlos|tennis|james|mike|brandon|fender|anthony|blowme|ferrari|cookie|chicken|maverick|chicago|joseph|diablo|sexsex|hardcore|666666|willie|welcome|chris|panther|yamaha|justin|banana|driver|marine|angels|fishing|david|maddog|hooters|wilson|butthead|dennis|fucking|captain|bigdick|chester|smokey|xavier|steven|viking|snoopy|blue|eagles|winner|samantha|house|miller|flower|jack|firebird|butter|united|turtle|steelers|tiffany|zxcvbn|tomcat|golf|bond007|bear|tiger|doctor|gateway|gators|angel|junior|thx1138|porno|badboy|debbie|spider|melissa|booger|1212|flyers|fish|porn|matrix|teens|scooby|jason|walter|cumshot|boston|braves|yankee|lover|barney|victor|tucker|princess|mercedes|5150|doggie|zzzzzz|gunner|horney|bubba|2112|fred|johnson|xxxxx|tits|member|boobs|donald|bigdaddy|bronco|penis|voyager|rangers|birdie|trouble|white|topgun|bigtits|bitches|green|super|qazwsx|magic|lakers|rachel|slayer|scott|2222|asdf|video|london|7777|marlboro|srinivas|internet|action|carter|jasper|monster|teresa|jeremy|11111111|bill|crystal|peter|pussies|cock|beer|rocket|theman|oliver|prince|beach|amateur|7777777|muffin|redsox|star|testing|shannon|murphy|frank|hannah|dave|eagle1|11111|mother|nathan|raiders|steve|forever|angela|viper|ou812|jake|lovers|suckit|gregory|buddy|whatever|young|nicholas|lucky|helpme|jackie|monica|midnight|college|baby|cunt|brian|mark|startrek|sierra|leather|232323|4444|beavis|bigcock|happy|sophie|ladies|naughty|giants|booty|blonde|fucked|golden|0|fire|sandra|pookie|packers|einstein|dolphins|chevy|winston|warrior|sammy|slut|8675309|zxcvbnm|nipples|power|victoria|asdfgh|vagina|toyota|travis|hotdog|paris|rock|xxxx|extreme|redskins|erotic|dirty|ford|freddy|arsenal|access14|wolf|nipple|iloveyou|alex|florida|eric|legend|movie|success|rosebud|jaguar|great|cool|cooper|1313|scorpio|mountain|madison|987654|brazil|lauren|japan|naked|squirt|stars|apple|alexis|aaaa|bonnie|peaches|jasmine|kevin|matt|qwertyui|danielle|beaver|4321|4128|runner|swimming|dolphin|gordon|casper|stupid|shit|saturn|gemini|apples|august|3333|canada|blazer|cumming|hunting|kitty|rainbow|112233|arthur|cream|calvin|shaved|surfer|samson|kelly|paul|mine|king|racing|5555|eagle|hentai|newyork|little|redwings|smith|sticky|cocacola|animal|broncos|private|skippy|marvin|blondes|enjoy|girl|apollo|parker|qwert|time|sydney|women|voodoo|magnum|juice|abgrtyu|777777|dreams|maxwell|music|rush2112|russia|scorpion|rebecca|tester|mistress|phantom|billy|6666|albert|111111|11111111|112233|121212|123123|123456|1234567|12345678|131313|232323|654321|666666|696969|777777|7777777|8675309|987654|abcdef|password1|password12|password123|twitter'.split('|');\nvar MIN_COMPLEXITY = 49; // 12 chars with Upper, Lower and Number\nvar MAX_COMPLEXITY = 120; //  25 chars, all charsets\nvar CHARSETS = [\n    // Commonly Used\n    ////////////////////\n    [0x0030, 0x0039], // Numbers\n    [0x0041, 0x005A], // Uppercase\n    [0x0061, 0x007A], // Lowercase\n    [0x0021, 0x002F], // Punctuation\n    [0x003A, 0x0040], // Punctuation\n    [0x005B, 0x0060], // Punctuation\n    [0x007B, 0x007E], // Punctuation\n    // Everything Else\n    ////////////////////\n    [0x0080, 0x00FF], // Latin-1 Supplement\n    [0x0100, 0x017F], // Latin Extended-A\n    [0x0180, 0x024F], // Latin Extended-B\n    [0x0250, 0x02AF], // IPA Extensions\n    [0x02B0, 0x02FF], // Spacing Modifier Letters\n    [0x0300, 0x036F], // Combining Diacritical Marks\n    [0x0370, 0x03FF], // Greek\n    [0x0400, 0x04FF], // Cyrillic\n    [0x0530, 0x058F], // Armenian\n    [0x0590, 0x05FF], // Hebrew\n    [0x0600, 0x06FF], // Arabic\n    [0x0700, 0x074F], // Syriac\n    [0x0780, 0x07BF], // Thaana\n    [0x0900, 0x097F], // Devanagari\n    [0x0980, 0x09FF], // Bengali\n    [0x0A00, 0x0A7F], // Gurmukhi\n    [0x0A80, 0x0AFF], // Gujarati\n    [0x0B00, 0x0B7F], // Oriya\n    [0x0B80, 0x0BFF], // Tamil\n    [0x0C00, 0x0C7F], // Telugu\n    [0x0C80, 0x0CFF], // Kannada\n    [0x0D00, 0x0D7F], // Malayalam\n    [0x0D80, 0x0DFF], // Sinhala\n    [0x0E00, 0x0E7F], // Thai\n    [0x0E80, 0x0EFF], // Lao\n    [0x0F00, 0x0FFF], // Tibetan\n    [0x1000, 0x109F], // Myanmar\n    [0x10A0, 0x10FF], // Georgian\n    [0x1100, 0x11FF], // Hangul Jamo\n    [0x1200, 0x137F], // Ethiopic\n    [0x13A0, 0x13FF], // Cherokee\n    [0x1400, 0x167F], // Unified Canadian Aboriginal Syllabics\n    [0x1680, 0x169F], // Ogham\n    [0x16A0, 0x16FF], // Runic\n    [0x1780, 0x17FF], // Khmer\n    [0x1800, 0x18AF], // Mongolian\n    [0x1E00, 0x1EFF], // Latin Extended Additional\n    [0x1F00, 0x1FFF], // Greek Extended\n    [0x2000, 0x206F], // General Punctuation\n    [0x2070, 0x209F], // Superscripts and Subscripts\n    [0x20A0, 0x20CF], // Currency Symbols\n    [0x20D0, 0x20FF], // Combining Marks for Symbols\n    [0x2100, 0x214F], // Letterlike Symbols\n    [0x2150, 0x218F], // Number Forms\n    [0x2190, 0x21FF], // Arrows\n    [0x2200, 0x22FF], // Mathematical Operators\n    [0x2300, 0x23FF], // Miscellaneous Technical\n    [0x2400, 0x243F], // Control Pictures\n    [0x2440, 0x245F], // Optical Character Recognition\n    [0x2460, 0x24FF], // Enclosed Alphanumerics\n    [0x2500, 0x257F], // Box Drawing\n    [0x2580, 0x259F], // Block Elements\n    [0x25A0, 0x25FF], // Geometric Shapes\n    [0x2600, 0x26FF], // Miscellaneous Symbols\n    [0x2700, 0x27BF], // Dingbats\n    [0x2800, 0x28FF], // Braille Patterns\n    [0x2E80, 0x2EFF], // CJK Radicals Supplement\n    [0x2F00, 0x2FDF], // Kangxi Radicals\n    [0x2FF0, 0x2FFF], // Ideographic Description Characters\n    [0x3000, 0x303F], // CJK Symbols and Punctuation\n    [0x3040, 0x309F], // Hiragana\n    [0x30A0, 0x30FF], // Katakana\n    [0x3100, 0x312F], // Bopomofo\n    [0x3130, 0x318F], // Hangul Compatibility Jamo\n    [0x3190, 0x319F], // Kanbun\n    [0x31A0, 0x31BF], // Bopomofo Extended\n    [0x3200, 0x32FF], // Enclosed CJK Letters and Months\n    [0x3300, 0x33FF], // CJK Compatibility\n    [0x3400, 0x4DB5], // CJK Unified Ideographs Extension A\n    [0x4E00, 0x9FFF], // CJK Unified Ideographs\n    [0xA000, 0xA48F], // Yi Syllables\n    [0xA490, 0xA4CF], // Yi Radicals\n    [0xAC00, 0xD7A3], // Hangul Syllables\n    [0xD800, 0xDB7F], // High Surrogates\n    [0xDB80, 0xDBFF], // High Private Use Surrogates\n    [0xDC00, 0xDFFF], // Low Surrogates\n    [0xE000, 0xF8FF], // Private Use\n    [0xF900, 0xFAFF], // CJK Compatibility Ideographs\n    [0xFB00, 0xFB4F], // Alphabetic Presentation Forms\n    [0xFB50, 0xFDFF], // Arabic Presentation Forms-A\n    [0xFE20, 0xFE2F], // Combining Half Marks\n    [0xFE30, 0xFE4F], // CJK Compatibility Forms\n    [0xFE50, 0xFE6F], // Small Form Variants\n    [0xFE70, 0xFEFE], // Arabic Presentation Forms-B\n    [0xFEFF, 0xFEFF], // Specials\n    [0xFF00, 0xFFEF], // Halfwidth and Fullwidth Forms\n    [0xFFF0, 0xFFFD]  // Specials\n];\n\n\n// Array of banned passwords generated from 500 worst passwords and 370 Banned Twitter lists\n// @property defaultBanList\n// @source http://www.skullsecurity.org/wiki/index.php/Passwords\n// \nexports.defaultBanList = DEFAULT_BAN_LIST;\n\n// Evaluates the supplied password and returns it's complexity score. \n// @method evalPasswordComplexity\n// @param {string} password - The password to be evaluated\n// @param {object} [options] - Options that modify the password complexity checking\n// @param {integer} [options.minimumChars=8] - Minimum number of characters in the password.\n// @param {number} [options.minimumComplexity=49] - Minimum complexity in order to be considered to be valid. Complexify's default settings will enforce a minimum level of complexity that would mean brute-forcing should take ~600 years on a commodity desktop machine.\n// @param {integer} [options.strengthScaleFactor=1] - Scale value for the complexity score (1 is equivalent to a percentage between 0-100%)\n// @param {string[]} [options.bannedPasswords={defaultBanList}] - Array of banned passwords\n// @param {string} [options.banMode='loose'] - 'strict' will match on the substrings within the banned passwords, 'loose' will only match on the whole word, 'none' will not used the banned list \n// @param {evalPasswordComplexityCallback} callback - Callback to be called when the complexity check is complete. \n// @returns {any} Returns the result of the supplied callback back to the calling function.\n//\nexports.evalPasswordComplexity = function(password, options, callback) {\n    // Process defaults\n    var defaults = {\n        minimumChars: 8,                            // minimum number of characters in the password\n        minimumComplexity: MIN_COMPLEXITY,\n        strengthScaleFactor: 1,                     // how to scale the resulting complexity score\n        bannedPasswords: DEFAULT_BAN_LIST,          // array of banned words\n        banMode: 'loose'                           // (strict|loose|none)\n    };\n    \n    if (typeof options == 'function' && !callback) {\n        callback = options;\n        options = {};\n    }\n    \n    // Set the defaults\n    options = _.pick(options, _.keys(defaults));\n    options = _.defaults(options, defaults);\n    \n    // @function additionaComplexityForCharset\n    // @param {string} str - password to check\n    // @param {integer[]} charset - pair of integers reprenting a range of unicode characters\n    // @returns {integer } complexity score based on size of charset\n    // @private\n    function additionalComplexityForCharset(str, charset) {\n        for (var i = str.length - 1; i >= 0; i--) {\n            if (charset[0] <= str.charCodeAt(i) && str.charCodeAt(i) <= charset[1]) {\n                return charset[1] - charset[0] + 1;\n            }\n        }\n        return 0;\n    }\n\n    // @function inBanlist\n    // @param {string} str - determines whether the supplied string is in the banlist \n    // @param {string[]} bannedPasswords - Array of banned passwords\n    // @param {string} banMode - 'strict' will match on the substrings within the banned passwords, 'loose' will only match on the whole word, 'none' will not used the banned list \n    // @returns {boolean} true if password is in the ban list, false otherwise\n    // @private\n    function inBanlist(str, bannedPasswords, banMode) {\n        if (bannedPasswords.length == 0 || banMode == 'none') \n            return false;\n\n        for (var i = 0; i < bannedPasswords.length; i++) {\n            if (banMode === 'strict') {\n                if (bannedPasswords[i].indexOf(str) !== -1) {\n                    console.log(\"Strict ban: \" + bannedPasswords[i]);\n                    return true;\n                }\n            } else {\n                if (bannedPasswords[i] === str) {\n                    console.log(\"Loose ban: \" + bannedPasswords[i]);\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    var complexity = 0, valid = false;\n    var error = [];\n\n    if (!inBanlist(password, options.bannedPasswords, options.banMode)) {\n        for (var i = CHARSETS.length - 1; i >= 0; i--) {\n            complexity += additionalComplexityForCharset(password, CHARSETS[i]);\n        }\n    } else {\n        error.push(\"banned\");\n    }\n    \n    // Use natural log to produce linear scale\n    complexity = Math.log(Math.pow(complexity, password.length)) * (1 / options.strengthScaleFactor);\n    console.log(\"Unscaled complexity: \" + complexity);\n\n    // Check if complexity meets minimum and password is long enough\n    if (complexity < options.minimumComplexity)\n        error.push(\"toosimple\");\n    if (password.length < options.minimumChars)\n        error.push(\"tooshort\");\n\n    // Scale to percentage, so it can be used for a progress bar\n    complexity = (complexity / MAX_COMPLEXITY) * 100;\n    complexity = (complexity > 100) ? 100 : complexity;\n\n    return callback(error.length == 0 ? null : error, error.length == 0, complexity);\n}\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (true) {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n      return _;\n    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n}.call(this));\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// vue-complexify.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b52772e708adb88be9fa","const VueComplexify = {\r\n  install (Vue) {\r\n    /* eslint-disable no-undef */\r\n    const complexify = require('node-complexify');\r\n\r\n    Vue.prototype.$evalPasswordComplexity = function (password, callback) {\r\n      complexify.evalPasswordComplexity(password, callback);\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default VueComplexify\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/VueComplexify.js","// @module complexify\n'use strict'\nvar _ = require('underscore');\n\n// @callback evalPasswordComplexityCallback\n// @param {string} err - error code if an error occurs, null otherwise\n// @param {boolean} valid - straight boolean to determine whether the password is valid or not given the supplied complexity params\n// @param {number} complexity - complexity score for the password scaled according to strengthScaleFactor (0-100% is default)\n\nvar DEFAULT_BAN_LIST = '123456|password|12345678|1234|pussy|12345|dragon|qwerty|696969|mustang|letmein|baseball|master|michael|football|shadow|monkey|abc123|pass|fuckme|6969|jordan|harley|ranger|iwantu|jennifer|hunter|fuck|2000|test|batman|trustno1|thomas|tigger|robert|access|love|buster|1234567|soccer|hockey|killer|george|sexy|andrew|charlie|superman|asshole|fuckyou|dallas|jessica|panties|pepper|1111|austin|william|daniel|golfer|summer|heather|hammer|yankees|joshua|maggie|biteme|enter|ashley|thunder|cowboy|silver|richard|fucker|orange|merlin|michelle|corvette|bigdog|cheese|matthew|121212|patrick|martin|freedom|ginger|blowjob|nicole|sparky|yellow|camaro|secret|dick|falcon|taylor|111111|131313|123123|bitch|hello|scooter|please|porsche|guitar|chelsea|black|diamond|nascar|jackson|cameron|654321|computer|amanda|wizard|xxxxxxxx|money|phoenix|mickey|bailey|knight|iceman|tigers|purple|andrea|horny|dakota|aaaaaa|player|sunshine|morgan|starwars|boomer|cowboys|edward|charles|girls|booboo|coffee|xxxxxx|bulldog|ncc1701|rabbit|peanut|john|johnny|gandalf|spanky|winter|brandy|compaq|carlos|tennis|james|mike|brandon|fender|anthony|blowme|ferrari|cookie|chicken|maverick|chicago|joseph|diablo|sexsex|hardcore|666666|willie|welcome|chris|panther|yamaha|justin|banana|driver|marine|angels|fishing|david|maddog|hooters|wilson|butthead|dennis|fucking|captain|bigdick|chester|smokey|xavier|steven|viking|snoopy|blue|eagles|winner|samantha|house|miller|flower|jack|firebird|butter|united|turtle|steelers|tiffany|zxcvbn|tomcat|golf|bond007|bear|tiger|doctor|gateway|gators|angel|junior|thx1138|porno|badboy|debbie|spider|melissa|booger|1212|flyers|fish|porn|matrix|teens|scooby|jason|walter|cumshot|boston|braves|yankee|lover|barney|victor|tucker|princess|mercedes|5150|doggie|zzzzzz|gunner|horney|bubba|2112|fred|johnson|xxxxx|tits|member|boobs|donald|bigdaddy|bronco|penis|voyager|rangers|birdie|trouble|white|topgun|bigtits|bitches|green|super|qazwsx|magic|lakers|rachel|slayer|scott|2222|asdf|video|london|7777|marlboro|srinivas|internet|action|carter|jasper|monster|teresa|jeremy|11111111|bill|crystal|peter|pussies|cock|beer|rocket|theman|oliver|prince|beach|amateur|7777777|muffin|redsox|star|testing|shannon|murphy|frank|hannah|dave|eagle1|11111|mother|nathan|raiders|steve|forever|angela|viper|ou812|jake|lovers|suckit|gregory|buddy|whatever|young|nicholas|lucky|helpme|jackie|monica|midnight|college|baby|cunt|brian|mark|startrek|sierra|leather|232323|4444|beavis|bigcock|happy|sophie|ladies|naughty|giants|booty|blonde|fucked|golden|0|fire|sandra|pookie|packers|einstein|dolphins|chevy|winston|warrior|sammy|slut|8675309|zxcvbnm|nipples|power|victoria|asdfgh|vagina|toyota|travis|hotdog|paris|rock|xxxx|extreme|redskins|erotic|dirty|ford|freddy|arsenal|access14|wolf|nipple|iloveyou|alex|florida|eric|legend|movie|success|rosebud|jaguar|great|cool|cooper|1313|scorpio|mountain|madison|987654|brazil|lauren|japan|naked|squirt|stars|apple|alexis|aaaa|bonnie|peaches|jasmine|kevin|matt|qwertyui|danielle|beaver|4321|4128|runner|swimming|dolphin|gordon|casper|stupid|shit|saturn|gemini|apples|august|3333|canada|blazer|cumming|hunting|kitty|rainbow|112233|arthur|cream|calvin|shaved|surfer|samson|kelly|paul|mine|king|racing|5555|eagle|hentai|newyork|little|redwings|smith|sticky|cocacola|animal|broncos|private|skippy|marvin|blondes|enjoy|girl|apollo|parker|qwert|time|sydney|women|voodoo|magnum|juice|abgrtyu|777777|dreams|maxwell|music|rush2112|russia|scorpion|rebecca|tester|mistress|phantom|billy|6666|albert|111111|11111111|112233|121212|123123|123456|1234567|12345678|131313|232323|654321|666666|696969|777777|7777777|8675309|987654|abcdef|password1|password12|password123|twitter'.split('|');\nvar MIN_COMPLEXITY = 49; // 12 chars with Upper, Lower and Number\nvar MAX_COMPLEXITY = 120; //  25 chars, all charsets\nvar CHARSETS = [\n    // Commonly Used\n    ////////////////////\n    [0x0030, 0x0039], // Numbers\n    [0x0041, 0x005A], // Uppercase\n    [0x0061, 0x007A], // Lowercase\n    [0x0021, 0x002F], // Punctuation\n    [0x003A, 0x0040], // Punctuation\n    [0x005B, 0x0060], // Punctuation\n    [0x007B, 0x007E], // Punctuation\n    // Everything Else\n    ////////////////////\n    [0x0080, 0x00FF], // Latin-1 Supplement\n    [0x0100, 0x017F], // Latin Extended-A\n    [0x0180, 0x024F], // Latin Extended-B\n    [0x0250, 0x02AF], // IPA Extensions\n    [0x02B0, 0x02FF], // Spacing Modifier Letters\n    [0x0300, 0x036F], // Combining Diacritical Marks\n    [0x0370, 0x03FF], // Greek\n    [0x0400, 0x04FF], // Cyrillic\n    [0x0530, 0x058F], // Armenian\n    [0x0590, 0x05FF], // Hebrew\n    [0x0600, 0x06FF], // Arabic\n    [0x0700, 0x074F], // Syriac\n    [0x0780, 0x07BF], // Thaana\n    [0x0900, 0x097F], // Devanagari\n    [0x0980, 0x09FF], // Bengali\n    [0x0A00, 0x0A7F], // Gurmukhi\n    [0x0A80, 0x0AFF], // Gujarati\n    [0x0B00, 0x0B7F], // Oriya\n    [0x0B80, 0x0BFF], // Tamil\n    [0x0C00, 0x0C7F], // Telugu\n    [0x0C80, 0x0CFF], // Kannada\n    [0x0D00, 0x0D7F], // Malayalam\n    [0x0D80, 0x0DFF], // Sinhala\n    [0x0E00, 0x0E7F], // Thai\n    [0x0E80, 0x0EFF], // Lao\n    [0x0F00, 0x0FFF], // Tibetan\n    [0x1000, 0x109F], // Myanmar\n    [0x10A0, 0x10FF], // Georgian\n    [0x1100, 0x11FF], // Hangul Jamo\n    [0x1200, 0x137F], // Ethiopic\n    [0x13A0, 0x13FF], // Cherokee\n    [0x1400, 0x167F], // Unified Canadian Aboriginal Syllabics\n    [0x1680, 0x169F], // Ogham\n    [0x16A0, 0x16FF], // Runic\n    [0x1780, 0x17FF], // Khmer\n    [0x1800, 0x18AF], // Mongolian\n    [0x1E00, 0x1EFF], // Latin Extended Additional\n    [0x1F00, 0x1FFF], // Greek Extended\n    [0x2000, 0x206F], // General Punctuation\n    [0x2070, 0x209F], // Superscripts and Subscripts\n    [0x20A0, 0x20CF], // Currency Symbols\n    [0x20D0, 0x20FF], // Combining Marks for Symbols\n    [0x2100, 0x214F], // Letterlike Symbols\n    [0x2150, 0x218F], // Number Forms\n    [0x2190, 0x21FF], // Arrows\n    [0x2200, 0x22FF], // Mathematical Operators\n    [0x2300, 0x23FF], // Miscellaneous Technical\n    [0x2400, 0x243F], // Control Pictures\n    [0x2440, 0x245F], // Optical Character Recognition\n    [0x2460, 0x24FF], // Enclosed Alphanumerics\n    [0x2500, 0x257F], // Box Drawing\n    [0x2580, 0x259F], // Block Elements\n    [0x25A0, 0x25FF], // Geometric Shapes\n    [0x2600, 0x26FF], // Miscellaneous Symbols\n    [0x2700, 0x27BF], // Dingbats\n    [0x2800, 0x28FF], // Braille Patterns\n    [0x2E80, 0x2EFF], // CJK Radicals Supplement\n    [0x2F00, 0x2FDF], // Kangxi Radicals\n    [0x2FF0, 0x2FFF], // Ideographic Description Characters\n    [0x3000, 0x303F], // CJK Symbols and Punctuation\n    [0x3040, 0x309F], // Hiragana\n    [0x30A0, 0x30FF], // Katakana\n    [0x3100, 0x312F], // Bopomofo\n    [0x3130, 0x318F], // Hangul Compatibility Jamo\n    [0x3190, 0x319F], // Kanbun\n    [0x31A0, 0x31BF], // Bopomofo Extended\n    [0x3200, 0x32FF], // Enclosed CJK Letters and Months\n    [0x3300, 0x33FF], // CJK Compatibility\n    [0x3400, 0x4DB5], // CJK Unified Ideographs Extension A\n    [0x4E00, 0x9FFF], // CJK Unified Ideographs\n    [0xA000, 0xA48F], // Yi Syllables\n    [0xA490, 0xA4CF], // Yi Radicals\n    [0xAC00, 0xD7A3], // Hangul Syllables\n    [0xD800, 0xDB7F], // High Surrogates\n    [0xDB80, 0xDBFF], // High Private Use Surrogates\n    [0xDC00, 0xDFFF], // Low Surrogates\n    [0xE000, 0xF8FF], // Private Use\n    [0xF900, 0xFAFF], // CJK Compatibility Ideographs\n    [0xFB00, 0xFB4F], // Alphabetic Presentation Forms\n    [0xFB50, 0xFDFF], // Arabic Presentation Forms-A\n    [0xFE20, 0xFE2F], // Combining Half Marks\n    [0xFE30, 0xFE4F], // CJK Compatibility Forms\n    [0xFE50, 0xFE6F], // Small Form Variants\n    [0xFE70, 0xFEFE], // Arabic Presentation Forms-B\n    [0xFEFF, 0xFEFF], // Specials\n    [0xFF00, 0xFFEF], // Halfwidth and Fullwidth Forms\n    [0xFFF0, 0xFFFD]  // Specials\n];\n\n\n// Array of banned passwords generated from 500 worst passwords and 370 Banned Twitter lists\n// @property defaultBanList\n// @source http://www.skullsecurity.org/wiki/index.php/Passwords\n// \nexports.defaultBanList = DEFAULT_BAN_LIST;\n\n// Evaluates the supplied password and returns it's complexity score. \n// @method evalPasswordComplexity\n// @param {string} password - The password to be evaluated\n// @param {object} [options] - Options that modify the password complexity checking\n// @param {integer} [options.minimumChars=8] - Minimum number of characters in the password.\n// @param {number} [options.minimumComplexity=49] - Minimum complexity in order to be considered to be valid. Complexify's default settings will enforce a minimum level of complexity that would mean brute-forcing should take ~600 years on a commodity desktop machine.\n// @param {integer} [options.strengthScaleFactor=1] - Scale value for the complexity score (1 is equivalent to a percentage between 0-100%)\n// @param {string[]} [options.bannedPasswords={defaultBanList}] - Array of banned passwords\n// @param {string} [options.banMode='loose'] - 'strict' will match on the substrings within the banned passwords, 'loose' will only match on the whole word, 'none' will not used the banned list \n// @param {evalPasswordComplexityCallback} callback - Callback to be called when the complexity check is complete. \n// @returns {any} Returns the result of the supplied callback back to the calling function.\n//\nexports.evalPasswordComplexity = function(password, options, callback) {\n    // Process defaults\n    var defaults = {\n        minimumChars: 8,                            // minimum number of characters in the password\n        minimumComplexity: MIN_COMPLEXITY,\n        strengthScaleFactor: 1,                     // how to scale the resulting complexity score\n        bannedPasswords: DEFAULT_BAN_LIST,          // array of banned words\n        banMode: 'loose'                           // (strict|loose|none)\n    };\n    \n    if (typeof options == 'function' && !callback) {\n        callback = options;\n        options = {};\n    }\n    \n    // Set the defaults\n    options = _.pick(options, _.keys(defaults));\n    options = _.defaults(options, defaults);\n    \n    // @function additionaComplexityForCharset\n    // @param {string} str - password to check\n    // @param {integer[]} charset - pair of integers reprenting a range of unicode characters\n    // @returns {integer } complexity score based on size of charset\n    // @private\n    function additionalComplexityForCharset(str, charset) {\n        for (var i = str.length - 1; i >= 0; i--) {\n            if (charset[0] <= str.charCodeAt(i) && str.charCodeAt(i) <= charset[1]) {\n                return charset[1] - charset[0] + 1;\n            }\n        }\n        return 0;\n    }\n\n    // @function inBanlist\n    // @param {string} str - determines whether the supplied string is in the banlist \n    // @param {string[]} bannedPasswords - Array of banned passwords\n    // @param {string} banMode - 'strict' will match on the substrings within the banned passwords, 'loose' will only match on the whole word, 'none' will not used the banned list \n    // @returns {boolean} true if password is in the ban list, false otherwise\n    // @private\n    function inBanlist(str, bannedPasswords, banMode) {\n        if (bannedPasswords.length == 0 || banMode == 'none') \n            return false;\n\n        for (var i = 0; i < bannedPasswords.length; i++) {\n            if (banMode === 'strict') {\n                if (bannedPasswords[i].indexOf(str) !== -1) {\n                    console.log(\"Strict ban: \" + bannedPasswords[i]);\n                    return true;\n                }\n            } else {\n                if (bannedPasswords[i] === str) {\n                    console.log(\"Loose ban: \" + bannedPasswords[i]);\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    var complexity = 0, valid = false;\n    var error = [];\n\n    if (!inBanlist(password, options.bannedPasswords, options.banMode)) {\n        for (var i = CHARSETS.length - 1; i >= 0; i--) {\n            complexity += additionalComplexityForCharset(password, CHARSETS[i]);\n        }\n    } else {\n        error.push(\"banned\");\n    }\n    \n    // Use natural log to produce linear scale\n    complexity = Math.log(Math.pow(complexity, password.length)) * (1 / options.strengthScaleFactor);\n    console.log(\"Unscaled complexity: \" + complexity);\n\n    // Check if complexity meets minimum and password is long enough\n    if (complexity < options.minimumComplexity)\n        error.push(\"toosimple\");\n    if (password.length < options.minimumChars)\n        error.push(\"tooshort\");\n\n    // Scale to percentage, so it can be used for a progress bar\n    complexity = (complexity / MAX_COMPLEXITY) * 100;\n    complexity = (complexity > 100) ? 100 : complexity;\n\n    return callback(error.length == 0 ? null : error, error.length == 0, complexity);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/node-complexify/lib/complexify.js\n// module id = 1\n// module chunks = 0","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/underscore/underscore.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}